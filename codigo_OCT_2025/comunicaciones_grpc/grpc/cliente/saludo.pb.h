// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: saludo.proto
// Protobuf C++ Version: 5.29.5

#ifndef saludo_2eproto_2epb_2eh
#define saludo_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029005
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_saludo_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_saludo_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_saludo_2eproto;
namespace saludo {
class Respuesta;
struct RespuestaDefaultTypeInternal;
extern RespuestaDefaultTypeInternal _Respuesta_default_instance_;
class Solicitud;
struct SolicitudDefaultTypeInternal;
extern SolicitudDefaultTypeInternal _Solicitud_default_instance_;
}  // namespace saludo
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace saludo {

// ===================================================================


// -------------------------------------------------------------------

class Solicitud final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:saludo.Solicitud) */ {
 public:
  inline Solicitud() : Solicitud(nullptr) {}
  ~Solicitud() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Solicitud* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Solicitud));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Solicitud(
      ::google::protobuf::internal::ConstantInitialized);

  inline Solicitud(const Solicitud& from) : Solicitud(nullptr, from) {}
  inline Solicitud(Solicitud&& from) noexcept
      : Solicitud(nullptr, std::move(from)) {}
  inline Solicitud& operator=(const Solicitud& from) {
    CopyFrom(from);
    return *this;
  }
  inline Solicitud& operator=(Solicitud&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Solicitud& default_instance() {
    return *internal_default_instance();
  }
  static inline const Solicitud* internal_default_instance() {
    return reinterpret_cast<const Solicitud*>(
        &_Solicitud_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Solicitud& a, Solicitud& b) { a.Swap(&b); }
  inline void Swap(Solicitud* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Solicitud* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Solicitud* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Solicitud>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Solicitud& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Solicitud& from) { Solicitud::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Solicitud* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "saludo.Solicitud"; }

 protected:
  explicit Solicitud(::google::protobuf::Arena* arena);
  Solicitud(::google::protobuf::Arena* arena, const Solicitud& from);
  Solicitud(::google::protobuf::Arena* arena, Solicitud&& from) noexcept
      : Solicitud(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNombreFieldNumber = 1,
  };
  // string nombre = 1;
  void clear_nombre() ;
  const std::string& nombre() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_nombre(Arg_&& arg, Args_... args);
  std::string* mutable_nombre();
  PROTOBUF_NODISCARD std::string* release_nombre();
  void set_allocated_nombre(std::string* value);

  private:
  const std::string& _internal_nombre() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_nombre(
      const std::string& value);
  std::string* _internal_mutable_nombre();

  public:
  // @@protoc_insertion_point(class_scope:saludo.Solicitud)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      31, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Solicitud& from_msg);
    ::google::protobuf::internal::ArenaStringPtr nombre_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_saludo_2eproto;
};
// -------------------------------------------------------------------

class Respuesta final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:saludo.Respuesta) */ {
 public:
  inline Respuesta() : Respuesta(nullptr) {}
  ~Respuesta() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Respuesta* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Respuesta));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Respuesta(
      ::google::protobuf::internal::ConstantInitialized);

  inline Respuesta(const Respuesta& from) : Respuesta(nullptr, from) {}
  inline Respuesta(Respuesta&& from) noexcept
      : Respuesta(nullptr, std::move(from)) {}
  inline Respuesta& operator=(const Respuesta& from) {
    CopyFrom(from);
    return *this;
  }
  inline Respuesta& operator=(Respuesta&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Respuesta& default_instance() {
    return *internal_default_instance();
  }
  static inline const Respuesta* internal_default_instance() {
    return reinterpret_cast<const Respuesta*>(
        &_Respuesta_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Respuesta& a, Respuesta& b) { a.Swap(&b); }
  inline void Swap(Respuesta* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Respuesta* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Respuesta* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Respuesta>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Respuesta& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Respuesta& from) { Respuesta::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Respuesta* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "saludo.Respuesta"; }

 protected:
  explicit Respuesta(::google::protobuf::Arena* arena);
  Respuesta(::google::protobuf::Arena* arena, const Respuesta& from);
  Respuesta(::google::protobuf::Arena* arena, Respuesta&& from) noexcept
      : Respuesta(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMensajeFieldNumber = 1,
  };
  // string mensaje = 1;
  void clear_mensaje() ;
  const std::string& mensaje() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_mensaje(Arg_&& arg, Args_... args);
  std::string* mutable_mensaje();
  PROTOBUF_NODISCARD std::string* release_mensaje();
  void set_allocated_mensaje(std::string* value);

  private:
  const std::string& _internal_mensaje() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_mensaje(
      const std::string& value);
  std::string* _internal_mutable_mensaje();

  public:
  // @@protoc_insertion_point(class_scope:saludo.Respuesta)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      32, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Respuesta& from_msg);
    ::google::protobuf::internal::ArenaStringPtr mensaje_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_saludo_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Solicitud

// string nombre = 1;
inline void Solicitud::clear_nombre() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nombre_.ClearToEmpty();
}
inline const std::string& Solicitud::nombre() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:saludo.Solicitud.nombre)
  return _internal_nombre();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Solicitud::set_nombre(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nombre_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:saludo.Solicitud.nombre)
}
inline std::string* Solicitud::mutable_nombre() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_nombre();
  // @@protoc_insertion_point(field_mutable:saludo.Solicitud.nombre)
  return _s;
}
inline const std::string& Solicitud::_internal_nombre() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nombre_.Get();
}
inline void Solicitud::_internal_set_nombre(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nombre_.Set(value, GetArena());
}
inline std::string* Solicitud::_internal_mutable_nombre() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.nombre_.Mutable( GetArena());
}
inline std::string* Solicitud::release_nombre() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:saludo.Solicitud.nombre)
  return _impl_.nombre_.Release();
}
inline void Solicitud::set_allocated_nombre(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nombre_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.nombre_.IsDefault()) {
    _impl_.nombre_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:saludo.Solicitud.nombre)
}

// -------------------------------------------------------------------

// Respuesta

// string mensaje = 1;
inline void Respuesta::clear_mensaje() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mensaje_.ClearToEmpty();
}
inline const std::string& Respuesta::mensaje() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:saludo.Respuesta.mensaje)
  return _internal_mensaje();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Respuesta::set_mensaje(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mensaje_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:saludo.Respuesta.mensaje)
}
inline std::string* Respuesta::mutable_mensaje() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_mensaje();
  // @@protoc_insertion_point(field_mutable:saludo.Respuesta.mensaje)
  return _s;
}
inline const std::string& Respuesta::_internal_mensaje() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mensaje_.Get();
}
inline void Respuesta::_internal_set_mensaje(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mensaje_.Set(value, GetArena());
}
inline std::string* Respuesta::_internal_mutable_mensaje() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.mensaje_.Mutable( GetArena());
}
inline std::string* Respuesta::release_mensaje() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:saludo.Respuesta.mensaje)
  return _impl_.mensaje_.Release();
}
inline void Respuesta::set_allocated_mensaje(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mensaje_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.mensaje_.IsDefault()) {
    _impl_.mensaje_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:saludo.Respuesta.mensaje)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace saludo


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // saludo_2eproto_2epb_2eh
